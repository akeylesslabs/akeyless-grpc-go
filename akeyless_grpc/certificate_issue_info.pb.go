//
//Akeyless API
//
//The purpose of this application is to provide access to Akeyless API.
//
//The version of the OpenAPI document: 2.0
//
//Contact: support@akeyless.io
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.4
// source: models/certificate_issue_info.proto

package akeyless_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CertificateIssueInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertIssuerType       string                      `protobuf:"bytes,62229661,opt,name=cert_issuer_type,proto3" json:"cert_issuer_type,omitempty"`
	MaxTtl               int64                       `protobuf:"varint,307578002,opt,name=max_ttl,proto3" json:"max_ttl,omitempty"`
	PkiCertIssuerDetails *PkiCertificateIssueDetails `protobuf:"bytes,83794362,opt,name=pki_cert_issuer_details,proto3" json:"pki_cert_issuer_details,omitempty"`
	SshCertIssuerDetails *SshCertificateIssueDetails `protobuf:"bytes,19599744,opt,name=ssh_cert_issuer_details,proto3" json:"ssh_cert_issuer_details,omitempty"`
}

func (x *CertificateIssueInfo) Reset() {
	*x = CertificateIssueInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_certificate_issue_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateIssueInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateIssueInfo) ProtoMessage() {}

func (x *CertificateIssueInfo) ProtoReflect() protoreflect.Message {
	mi := &file_models_certificate_issue_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateIssueInfo.ProtoReflect.Descriptor instead.
func (*CertificateIssueInfo) Descriptor() ([]byte, []int) {
	return file_models_certificate_issue_info_proto_rawDescGZIP(), []int{0}
}

func (x *CertificateIssueInfo) GetCertIssuerType() string {
	if x != nil {
		return x.CertIssuerType
	}
	return ""
}

func (x *CertificateIssueInfo) GetMaxTtl() int64 {
	if x != nil {
		return x.MaxTtl
	}
	return 0
}

func (x *CertificateIssueInfo) GetPkiCertIssuerDetails() *PkiCertificateIssueDetails {
	if x != nil {
		return x.PkiCertIssuerDetails
	}
	return nil
}

func (x *CertificateIssueInfo) GetSshCertIssuerDetails() *SshCertificateIssueDetails {
	if x != nil {
		return x.SshCertIssuerDetails
	}
	return nil
}

var File_models_certificate_issue_info_proto protoreflect.FileDescriptor

var file_models_certificate_issue_info_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x1a, 0x1a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x70, 0x6b, 0x69, 0x5f, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x73, 0x68, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x02, 0x0a, 0x14, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2d, 0x0a, 0x10, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x9d, 0x99, 0xd6, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x92, 0x89, 0xd5, 0x92,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x74, 0x6c, 0x12, 0x66,
	0x0a, 0x17, 0x70, 0x6b, 0x69, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0xba, 0xb3, 0xfa, 0x27, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x6b, 0x69, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x17, 0x70,
	0x6b, 0x69, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x66, 0x0a, 0x17, 0x73, 0x73, 0x68, 0x5f, 0x63, 0x65,
	0x72, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x80, 0xa3, 0xac, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6b, 0x65,
	0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x73, 0x68, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x17, 0x73, 0x73, 0x68, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x5f,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x51,
	0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x50, 0x01, 0x5a, 0x0f, 0x2e, 0x3b, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73,
	0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0xaa, 0x02, 0x0d, 0x41, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73,
	0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0xca, 0x02, 0x0d, 0x41, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73,
	0x73, 0x5c, 0x67, 0x52, 0x50, 0x43, 0xe2, 0x02, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x50, 0x00, 0x50, 0x01, 0x50, 0x02, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_models_certificate_issue_info_proto_rawDescOnce sync.Once
	file_models_certificate_issue_info_proto_rawDescData = file_models_certificate_issue_info_proto_rawDesc
)

func file_models_certificate_issue_info_proto_rawDescGZIP() []byte {
	file_models_certificate_issue_info_proto_rawDescOnce.Do(func() {
		file_models_certificate_issue_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_certificate_issue_info_proto_rawDescData)
	})
	return file_models_certificate_issue_info_proto_rawDescData
}

var file_models_certificate_issue_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_models_certificate_issue_info_proto_goTypes = []any{
	(*CertificateIssueInfo)(nil),       // 0: akeyless_grpc.CertificateIssueInfo
	(*PkiCertificateIssueDetails)(nil), // 1: akeyless_grpc.PkiCertificateIssueDetails
	(*SshCertificateIssueDetails)(nil), // 2: akeyless_grpc.SshCertificateIssueDetails
}
var file_models_certificate_issue_info_proto_depIdxs = []int32{
	1, // 0: akeyless_grpc.CertificateIssueInfo.pki_cert_issuer_details:type_name -> akeyless_grpc.PkiCertificateIssueDetails
	2, // 1: akeyless_grpc.CertificateIssueInfo.ssh_cert_issuer_details:type_name -> akeyless_grpc.SshCertificateIssueDetails
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_models_certificate_issue_info_proto_init() }
func file_models_certificate_issue_info_proto_init() {
	if File_models_certificate_issue_info_proto != nil {
		return
	}
	file_models_special_types_proto_init()
	file_models_pki_certificate_issue_details_proto_init()
	file_models_ssh_certificate_issue_details_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_models_certificate_issue_info_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CertificateIssueInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_certificate_issue_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_certificate_issue_info_proto_goTypes,
		DependencyIndexes: file_models_certificate_issue_info_proto_depIdxs,
		MessageInfos:      file_models_certificate_issue_info_proto_msgTypes,
	}.Build()
	File_models_certificate_issue_info_proto = out.File
	file_models_certificate_issue_info_proto_rawDesc = nil
	file_models_certificate_issue_info_proto_goTypes = nil
	file_models_certificate_issue_info_proto_depIdxs = nil
}
