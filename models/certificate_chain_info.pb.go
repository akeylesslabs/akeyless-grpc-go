//
//Akeyless API
//
//The purpose of this application is to provide access to Akeyless API.
//
//The version of the OpenAPI document: 2.0
//
//Contact: support@akeyless.io
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.4
// source: models/certificate_chain_info.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CertificateChainInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertificateChain              []*CertificateInfo            `protobuf:"bytes,508056040,rep,name=certificate_chain,proto3" json:"certificate_chain,omitempty"`
	CertificateFormat             string                        `protobuf:"bytes,449252258,opt,name=certificate_format,proto3" json:"certificate_format,omitempty"`
	CertificateHasPrivateKey      bool                          `protobuf:"varint,326181675,opt,name=certificate_has_private_key,proto3" json:"certificate_has_private_key,omitempty"`
	CertificateIssuerGwClusterUrl string                        `protobuf:"bytes,16856697,opt,name=certificate_issuer_gw_cluster_url,proto3" json:"certificate_issuer_gw_cluster_url,omitempty"`
	CertificateIssuerItemId       int64                         `protobuf:"varint,321325594,opt,name=certificate_issuer_item_id,proto3" json:"certificate_issuer_item_id,omitempty"`
	CertificateIssuerName         string                        `protobuf:"bytes,385450410,opt,name=certificate_issuer_name,proto3" json:"certificate_issuer_name,omitempty"`
	CertificatePem                string                        `protobuf:"bytes,380404113,opt,name=certificate_pem,proto3" json:"certificate_pem,omitempty"`
	CertificateStatus             string                        `protobuf:"bytes,248192105,opt,name=certificate_status,proto3" json:"certificate_status,omitempty"`
	ExpirationEvents              []*CertificateExpirationEvent `protobuf:"bytes,290914138,rep,name=expiration_events,proto3" json:"expiration_events,omitempty"`
}

func (x *CertificateChainInfo) Reset() {
	*x = CertificateChainInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_certificate_chain_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateChainInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateChainInfo) ProtoMessage() {}

func (x *CertificateChainInfo) ProtoReflect() protoreflect.Message {
	mi := &file_models_certificate_chain_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateChainInfo.ProtoReflect.Descriptor instead.
func (*CertificateChainInfo) Descriptor() ([]byte, []int) {
	return file_models_certificate_chain_info_proto_rawDescGZIP(), []int{0}
}

func (x *CertificateChainInfo) GetCertificateChain() []*CertificateInfo {
	if x != nil {
		return x.CertificateChain
	}
	return nil
}

func (x *CertificateChainInfo) GetCertificateFormat() string {
	if x != nil {
		return x.CertificateFormat
	}
	return ""
}

func (x *CertificateChainInfo) GetCertificateHasPrivateKey() bool {
	if x != nil {
		return x.CertificateHasPrivateKey
	}
	return false
}

func (x *CertificateChainInfo) GetCertificateIssuerGwClusterUrl() string {
	if x != nil {
		return x.CertificateIssuerGwClusterUrl
	}
	return ""
}

func (x *CertificateChainInfo) GetCertificateIssuerItemId() int64 {
	if x != nil {
		return x.CertificateIssuerItemId
	}
	return 0
}

func (x *CertificateChainInfo) GetCertificateIssuerName() string {
	if x != nil {
		return x.CertificateIssuerName
	}
	return ""
}

func (x *CertificateChainInfo) GetCertificatePem() string {
	if x != nil {
		return x.CertificatePem
	}
	return ""
}

func (x *CertificateChainInfo) GetCertificateStatus() string {
	if x != nil {
		return x.CertificateStatus
	}
	return ""
}

func (x *CertificateChainInfo) GetExpirationEvents() []*CertificateExpirationEvent {
	if x != nil {
		return x.ExpirationEvents
	}
	return nil
}

var File_models_certificate_chain_info_proto protoreflect.FileDescriptor

var file_models_certificate_chain_info_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x1a, 0x1a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x29, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x04, 0x0a, 0x14, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x50, 0x0a, 0x11, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0xe8, 0xa3, 0xa1, 0xf2, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x11, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x12, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0xa2, 0x97, 0x9c, 0xd6,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x44, 0x0a, 0x1b, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0xab, 0xc6, 0xc4, 0x9b, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x68, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x12,
	0x4f, 0x0a, 0x21, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x67, 0x77, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0xf9, 0xec, 0x84, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x21, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x5f, 0x67, 0x77, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c,
	0x12, 0x42, 0x0a, 0x1a, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x9a,
	0x94, 0x9c, 0x99, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x17, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0xaa, 0x83, 0xe6, 0xb7, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x5f, 0x70, 0x65, 0x6d, 0x18, 0x91, 0x83, 0xb2, 0xb5, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x6d,
	0x12, 0x31, 0x0a, 0x12, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xe9, 0xb8, 0xac, 0x76, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x5b, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0xda, 0xfe, 0xdb, 0x8a, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x42, 0x51, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x01, 0x5a, 0x0f, 0x2e, 0x3b, 0x61, 0x6b, 0x65, 0x79, 0x6c,
	0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0xaa, 0x02, 0x0d, 0x41, 0x6b, 0x65, 0x79, 0x6c,
	0x65, 0x73, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0xca, 0x02, 0x0d, 0x41, 0x6b, 0x65, 0x79, 0x6c,
	0x65, 0x73, 0x73, 0x5c, 0x67, 0x52, 0x50, 0x43, 0xe2, 0x02, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x50, 0x00, 0x50, 0x01, 0x50, 0x02, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_models_certificate_chain_info_proto_rawDescOnce sync.Once
	file_models_certificate_chain_info_proto_rawDescData = file_models_certificate_chain_info_proto_rawDesc
)

func file_models_certificate_chain_info_proto_rawDescGZIP() []byte {
	file_models_certificate_chain_info_proto_rawDescOnce.Do(func() {
		file_models_certificate_chain_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_certificate_chain_info_proto_rawDescData)
	})
	return file_models_certificate_chain_info_proto_rawDescData
}

var file_models_certificate_chain_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_models_certificate_chain_info_proto_goTypes = []any{
	(*CertificateChainInfo)(nil),       // 0: akeyless_grpc.CertificateChainInfo
	(*CertificateInfo)(nil),            // 1: akeyless_grpc.CertificateInfo
	(*CertificateExpirationEvent)(nil), // 2: akeyless_grpc.CertificateExpirationEvent
}
var file_models_certificate_chain_info_proto_depIdxs = []int32{
	1, // 0: akeyless_grpc.CertificateChainInfo.certificate_chain:type_name -> akeyless_grpc.CertificateInfo
	2, // 1: akeyless_grpc.CertificateChainInfo.expiration_events:type_name -> akeyless_grpc.CertificateExpirationEvent
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_models_certificate_chain_info_proto_init() }
func file_models_certificate_chain_info_proto_init() {
	if File_models_certificate_chain_info_proto != nil {
		return
	}
	file_models_special_types_proto_init()
	file_models_certificate_expiration_event_proto_init()
	file_models_certificate_info_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_models_certificate_chain_info_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CertificateChainInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_certificate_chain_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_certificate_chain_info_proto_goTypes,
		DependencyIndexes: file_models_certificate_chain_info_proto_depIdxs,
		MessageInfos:      file_models_certificate_chain_info_proto_msgTypes,
	}.Build()
	File_models_certificate_chain_info_proto = out.File
	file_models_certificate_chain_info_proto_rawDesc = nil
	file_models_certificate_chain_info_proto_goTypes = nil
	file_models_certificate_chain_info_proto_depIdxs = nil
}
