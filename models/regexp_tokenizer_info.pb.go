//
//Akeyless API
//
//The purpose of this application is to provide access to Akeyless API.
//
//The version of the OpenAPI document: 2.0
//
//Contact: support@akeyless.io
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.4
// source: models/regexp_tokenizer_info.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegexpTokenizerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Alphabet used for the tokenization
	Alphabet string `protobuf:"bytes,309913206,opt,name=alphabet,proto3" json:"alphabet,omitempty"`
	// Transformation to perform on the decrypted data
	DecodingTemplate string `protobuf:"bytes,493384465,opt,name=decoding_template,proto3" json:"decoding_template,omitempty"`
	// Transformation to perform on the encrypted data, if the required output template doesn't match the input string The output Should still be valid for the Pattern, otherwise the secret would be able to be decrypted.
	EncodingTemplate string `protobuf:"bytes,63758876,opt,name=encoding_template,proto3" json:"encoding_template,omitempty"`
	// Regexp pattern to extract and deposit the text/encdata
	Pattern string `protobuf:"bytes,254219377,opt,name=pattern,proto3" json:"pattern,omitempty"`
}

func (x *RegexpTokenizerInfo) Reset() {
	*x = RegexpTokenizerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_regexp_tokenizer_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegexpTokenizerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegexpTokenizerInfo) ProtoMessage() {}

func (x *RegexpTokenizerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_models_regexp_tokenizer_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegexpTokenizerInfo.ProtoReflect.Descriptor instead.
func (*RegexpTokenizerInfo) Descriptor() ([]byte, []int) {
	return file_models_regexp_tokenizer_info_proto_rawDescGZIP(), []int{0}
}

func (x *RegexpTokenizerInfo) GetAlphabet() string {
	if x != nil {
		return x.Alphabet
	}
	return ""
}

func (x *RegexpTokenizerInfo) GetDecodingTemplate() string {
	if x != nil {
		return x.DecodingTemplate
	}
	return ""
}

func (x *RegexpTokenizerInfo) GetEncodingTemplate() string {
	if x != nil {
		return x.EncodingTemplate
	}
	return ""
}

func (x *RegexpTokenizerInfo) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

var File_models_regexp_tokenizer_info_proto protoreflect.FileDescriptor

var file_models_regexp_tokenizer_info_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x1a, 0x1a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb5, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x65, 0x78, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x69,
	0x7a, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x62, 0x65, 0x74, 0x18, 0xf6, 0xcc, 0xe3, 0x93, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x62, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x11, 0x64, 0x65, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x91, 0xe6, 0xa1,
	0xeb, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x11, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x9c,
	0xc4, 0xb3, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0xf1, 0xa8, 0x9c, 0x79, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x42, 0x51, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x01, 0x5a, 0x0f,
	0x2e, 0x3b, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0xaa,
	0x02, 0x0d, 0x41, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0xca,
	0x02, 0x0d, 0x41, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5c, 0x67, 0x52, 0x50, 0x43, 0xe2,
	0x02, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_models_regexp_tokenizer_info_proto_rawDescOnce sync.Once
	file_models_regexp_tokenizer_info_proto_rawDescData = file_models_regexp_tokenizer_info_proto_rawDesc
)

func file_models_regexp_tokenizer_info_proto_rawDescGZIP() []byte {
	file_models_regexp_tokenizer_info_proto_rawDescOnce.Do(func() {
		file_models_regexp_tokenizer_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_regexp_tokenizer_info_proto_rawDescData)
	})
	return file_models_regexp_tokenizer_info_proto_rawDescData
}

var file_models_regexp_tokenizer_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_models_regexp_tokenizer_info_proto_goTypes = []any{
	(*RegexpTokenizerInfo)(nil), // 0: akeyless_grpc.RegexpTokenizerInfo
}
var file_models_regexp_tokenizer_info_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_models_regexp_tokenizer_info_proto_init() }
func file_models_regexp_tokenizer_info_proto_init() {
	if File_models_regexp_tokenizer_info_proto != nil {
		return
	}
	file_models_special_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_models_regexp_tokenizer_info_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RegexpTokenizerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_regexp_tokenizer_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_regexp_tokenizer_info_proto_goTypes,
		DependencyIndexes: file_models_regexp_tokenizer_info_proto_depIdxs,
		MessageInfos:      file_models_regexp_tokenizer_info_proto_msgTypes,
	}.Build()
	File_models_regexp_tokenizer_info_proto = out.File
	file_models_regexp_tokenizer_info_proto_rawDesc = nil
	file_models_regexp_tokenizer_info_proto_goTypes = nil
	file_models_regexp_tokenizer_info_proto_depIdxs = nil
}
