//
//Akeyless API
//
//The purpose of this application is to provide access to Akeyless API.
//
//The version of the OpenAPI document: 2.0
//
//Contact: support@akeyless.io
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.4
// source: models/ssh_certificate_issue_details.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SshCertificateIssueDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Relevant for host certificate
	AllowedDomains        []string  `protobuf:"bytes,417577833,rep,name=allowed_domains,proto3" json:"allowed_domains,omitempty"`
	AllowedUserKeyLengths *MapInt64 `protobuf:"bytes,216821683,opt,name=allowed_user_key_lengths,proto3" json:"allowed_user_key_lengths,omitempty"`
	// Relevant for user certificate
	AllowedUsers    []string          `protobuf:"bytes,180153170,rep,name=allowed_users,proto3" json:"allowed_users,omitempty"`
	CertType        int32             `protobuf:"varint,331910029,opt,name=cert_type,proto3" json:"cert_type,omitempty"`
	CriticalOptions map[string]string `protobuf:"bytes,294360574,rep,name=critical_options,proto3" json:"critical_options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Extensions      map[string]string `protobuf:"bytes,198808559,rep,name=extensions,proto3" json:"extensions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Principals      []string          `protobuf:"bytes,338717179,rep,name=principals,proto3" json:"principals,omitempty"`
	// In case it is empty, the key ID will be combination of user identifiers and a random string
	StaticKeyId string `protobuf:"bytes,389937644,opt,name=static_key_id,proto3" json:"static_key_id,omitempty"`
}

func (x *SshCertificateIssueDetails) Reset() {
	*x = SshCertificateIssueDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_ssh_certificate_issue_details_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SshCertificateIssueDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SshCertificateIssueDetails) ProtoMessage() {}

func (x *SshCertificateIssueDetails) ProtoReflect() protoreflect.Message {
	mi := &file_models_ssh_certificate_issue_details_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SshCertificateIssueDetails.ProtoReflect.Descriptor instead.
func (*SshCertificateIssueDetails) Descriptor() ([]byte, []int) {
	return file_models_ssh_certificate_issue_details_proto_rawDescGZIP(), []int{0}
}

func (x *SshCertificateIssueDetails) GetAllowedDomains() []string {
	if x != nil {
		return x.AllowedDomains
	}
	return nil
}

func (x *SshCertificateIssueDetails) GetAllowedUserKeyLengths() *MapInt64 {
	if x != nil {
		return x.AllowedUserKeyLengths
	}
	return nil
}

func (x *SshCertificateIssueDetails) GetAllowedUsers() []string {
	if x != nil {
		return x.AllowedUsers
	}
	return nil
}

func (x *SshCertificateIssueDetails) GetCertType() int32 {
	if x != nil {
		return x.CertType
	}
	return 0
}

func (x *SshCertificateIssueDetails) GetCriticalOptions() map[string]string {
	if x != nil {
		return x.CriticalOptions
	}
	return nil
}

func (x *SshCertificateIssueDetails) GetExtensions() map[string]string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *SshCertificateIssueDetails) GetPrincipals() []string {
	if x != nil {
		return x.Principals
	}
	return nil
}

func (x *SshCertificateIssueDetails) GetStaticKeyId() string {
	if x != nil {
		return x.StaticKeyId
	}
	return ""
}

var File_models_ssh_certificate_issue_details_proto protoreflect.FileDescriptor

var file_models_ssh_certificate_issue_details_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x73, 0x68, 0x5f, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x6b,
	0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x1a, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x05, 0x0a, 0x1a, 0x53, 0x73, 0x68, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0xe9, 0xf6, 0x8e, 0xc7, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x18, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x73,
	0x18, 0xb3, 0xdf, 0xb1, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6b, 0x65, 0x79,
	0x6c, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x52, 0x18, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x73, 0x12, 0x27, 0x0a, 0x0d,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0xd2, 0xd6,
	0xf3, 0x55, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x8d, 0x97, 0xa2, 0x9e, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x65,
	0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x6e, 0x0a, 0x10, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfe, 0xab, 0xae, 0x8c,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x73, 0x68, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5c, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xef, 0xa7, 0xe6, 0x5e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x73, 0x68, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x61, 0x6c, 0x73, 0x18, 0xfb, 0xd3, 0xc1, 0xa1, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0xec, 0xf3, 0xf7, 0xb9, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x69, 0x64, 0x1a, 0x42, 0x0a, 0x14, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x51, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6b,
	0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x01, 0x5a, 0x0f, 0x2e,
	0x3b, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0xaa, 0x02,
	0x0d, 0x41, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0xca, 0x02,
	0x0d, 0x41, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5c, 0x67, 0x52, 0x50, 0x43, 0xe2, 0x02,
	0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_models_ssh_certificate_issue_details_proto_rawDescOnce sync.Once
	file_models_ssh_certificate_issue_details_proto_rawDescData = file_models_ssh_certificate_issue_details_proto_rawDesc
)

func file_models_ssh_certificate_issue_details_proto_rawDescGZIP() []byte {
	file_models_ssh_certificate_issue_details_proto_rawDescOnce.Do(func() {
		file_models_ssh_certificate_issue_details_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_ssh_certificate_issue_details_proto_rawDescData)
	})
	return file_models_ssh_certificate_issue_details_proto_rawDescData
}

var file_models_ssh_certificate_issue_details_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_models_ssh_certificate_issue_details_proto_goTypes = []any{
	(*SshCertificateIssueDetails)(nil), // 0: akeyless_grpc.SshCertificateIssueDetails
	nil,                                // 1: akeyless_grpc.SshCertificateIssueDetails.CriticalOptionsEntry
	nil,                                // 2: akeyless_grpc.SshCertificateIssueDetails.ExtensionsEntry
	(*MapInt64)(nil),                   // 3: akeyless_grpc.MapInt64
}
var file_models_ssh_certificate_issue_details_proto_depIdxs = []int32{
	3, // 0: akeyless_grpc.SshCertificateIssueDetails.allowed_user_key_lengths:type_name -> akeyless_grpc.MapInt64
	1, // 1: akeyless_grpc.SshCertificateIssueDetails.critical_options:type_name -> akeyless_grpc.SshCertificateIssueDetails.CriticalOptionsEntry
	2, // 2: akeyless_grpc.SshCertificateIssueDetails.extensions:type_name -> akeyless_grpc.SshCertificateIssueDetails.ExtensionsEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_models_ssh_certificate_issue_details_proto_init() }
func file_models_ssh_certificate_issue_details_proto_init() {
	if File_models_ssh_certificate_issue_details_proto != nil {
		return
	}
	file_models_special_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_models_ssh_certificate_issue_details_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SshCertificateIssueDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_ssh_certificate_issue_details_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_ssh_certificate_issue_details_proto_goTypes,
		DependencyIndexes: file_models_ssh_certificate_issue_details_proto_depIdxs,
		MessageInfos:      file_models_ssh_certificate_issue_details_proto_msgTypes,
	}.Build()
	File_models_ssh_certificate_issue_details_proto = out.File
	file_models_ssh_certificate_issue_details_proto_rawDesc = nil
	file_models_ssh_certificate_issue_details_proto_goTypes = nil
	file_models_ssh_certificate_issue_details_proto_depIdxs = nil
}
