//
//Akeyless API
//
//The purpose of this application is to provide access to Akeyless API.
//
//The version of the OpenAPI document: 2.0
//
//Contact: support@akeyless.io
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.4
// source: models/auth.proto

package akeyless_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Access ID
	AccessId string `protobuf:"bytes,504474079,opt,name=access_id,json=access-id,proto3" json:"access_id,omitempty"`
	// Access key (relevant only for access-type=access_key)
	AccessKey string `protobuf:"bytes,69437836,opt,name=access_key,json=access-key,proto3" json:"access_key,omitempty"`
	// Access Type (access_key/password/saml/ldap/k8s/azure_ad/oidc/aws_iam/universal_identity/jwt/gcp/cert)
	AccessType string `protobuf:"bytes,4802047,opt,name=access_type,json=access-type,proto3" json:"access_type,omitempty"`
	// Account id (relevant only for access-type=password where the email address is associated with more than one account)
	AccountId string `protobuf:"bytes,266510150,opt,name=account_id,json=account-id,proto3" json:"account_id,omitempty"`
	// Email (relevant only for access-type=password)
	AdminEmail string `protobuf:"bytes,514823268,opt,name=admin_email,json=admin-email,proto3" json:"admin_email,omitempty"`
	// Password (relevant only for access-type=password)
	AdminPassword string `protobuf:"bytes,147358556,opt,name=admin_password,json=admin-password,proto3" json:"admin_password,omitempty"`
	// Certificate data encoded in base64. Used if file was not provided. (relevant only for access-type=cert)
	CertData string `protobuf:"bytes,378585679,opt,name=cert_data,json=cert-data,proto3" json:"cert_data,omitempty"`
	// The cloud identity (relevant only for access-type=azure_ad,aws_iam,gcp)
	CloudId string `protobuf:"bytes,20852661,opt,name=cloud_id,json=cloud-id,proto3" json:"cloud_id,omitempty"`
	Debug   bool   `protobuf:"varint,95458899,opt,name=debug,proto3" json:"debug,omitempty"`
	// Gateway URL for the K8S/OAUTH2 authenticated (relevant only for access-type=k8s/oauth2)
	GatewayUrl string `protobuf:"bytes,436486554,opt,name=gateway_url,json=gateway-url,proto3" json:"gateway_url,omitempty"`
	// GCP JWT audience
	GcpAudience string `protobuf:"bytes,147155812,opt,name=gcp_audience,json=gcp-audience,proto3" json:"gcp_audience,omitempty"`
	// Set output format to JSON
	Json bool `protobuf:"varint,3271912,opt,name=json,proto3" json:"json,omitempty"`
	// The Json Web Token (relevant only for access-type=jwt/oidc)
	Jwt string `protobuf:"bytes,105671,opt,name=jwt,proto3" json:"jwt,omitempty"`
	// The K8S Auth config name (relevant only for access-type=k8s)
	K8SAuthConfigName string `protobuf:"bytes,152509339,opt,name=k8s_auth_config_name,json=k8s-auth-config-name,proto3" json:"k8s_auth_config_name,omitempty"`
	// The K8S service account token. (relevant only for access-type=k8s)
	K8SServiceAccountToken string `protobuf:"bytes,84004969,opt,name=k8s_service_account_token,json=k8s-service-account-token,proto3" json:"k8s_service_account_token,omitempty"`
	// Private key data encoded in base64. Used if file was not provided.(relevant only for access-type=cert)
	KeyData string `protobuf:"bytes,454465112,opt,name=key_data,json=key-data,proto3" json:"key_data,omitempty"`
	// LDAP password (relevant only for access-type=ldap)
	LdapPassword string `protobuf:"bytes,425950260,opt,name=ldap_password,proto3" json:"ldap_password,omitempty"`
	// LDAP username (relevant only for access-type=ldap)
	LdapUsername string `protobuf:"bytes,519878034,opt,name=ldap_username,proto3" json:"ldap_username,omitempty"`
	// The type of the OCI configuration to use [instance/apikey/resource] (relevant only for access-type=oci)
	OciAuthType string `protobuf:"bytes,74705531,opt,name=oci_auth_type,json=oci-auth-type,proto3" json:"oci_auth_type,omitempty"`
	// A list of Oracle Cloud IDs groups (relevant only for access-type=oci)
	OciGroupOcid []string `protobuf:"bytes,376141772,rep,name=oci_group_ocid,json=oci-group-ocid,proto3" json:"oci_group_ocid,omitempty"`
	// The universal_identity token (relevant only for access-type=universal_identity)
	UidToken string `protobuf:"bytes,247175864,opt,name=uid_token,proto3" json:"uid_token,omitempty"`
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_models_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_models_auth_proto_rawDescGZIP(), []int{0}
}

func (x *Auth) GetAccessId() string {
	if x != nil {
		return x.AccessId
	}
	return ""
}

func (x *Auth) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *Auth) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

func (x *Auth) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Auth) GetAdminEmail() string {
	if x != nil {
		return x.AdminEmail
	}
	return ""
}

func (x *Auth) GetAdminPassword() string {
	if x != nil {
		return x.AdminPassword
	}
	return ""
}

func (x *Auth) GetCertData() string {
	if x != nil {
		return x.CertData
	}
	return ""
}

func (x *Auth) GetCloudId() string {
	if x != nil {
		return x.CloudId
	}
	return ""
}

func (x *Auth) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *Auth) GetGatewayUrl() string {
	if x != nil {
		return x.GatewayUrl
	}
	return ""
}

func (x *Auth) GetGcpAudience() string {
	if x != nil {
		return x.GcpAudience
	}
	return ""
}

func (x *Auth) GetJson() bool {
	if x != nil {
		return x.Json
	}
	return false
}

func (x *Auth) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

func (x *Auth) GetK8SAuthConfigName() string {
	if x != nil {
		return x.K8SAuthConfigName
	}
	return ""
}

func (x *Auth) GetK8SServiceAccountToken() string {
	if x != nil {
		return x.K8SServiceAccountToken
	}
	return ""
}

func (x *Auth) GetKeyData() string {
	if x != nil {
		return x.KeyData
	}
	return ""
}

func (x *Auth) GetLdapPassword() string {
	if x != nil {
		return x.LdapPassword
	}
	return ""
}

func (x *Auth) GetLdapUsername() string {
	if x != nil {
		return x.LdapUsername
	}
	return ""
}

func (x *Auth) GetOciAuthType() string {
	if x != nil {
		return x.OciAuthType
	}
	return ""
}

func (x *Auth) GetOciGroupOcid() []string {
	if x != nil {
		return x.OciGroupOcid
	}
	return nil
}

func (x *Auth) GetUidToken() string {
	if x != nil {
		return x.UidToken
	}
	return ""
}

var File_models_auth_proto protoreflect.FileDescriptor

var file_models_auth_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x1a, 0x1a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98,
	0x06, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0xdf, 0xd3, 0xc6, 0xf0, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x8c, 0x93, 0x8e, 0x21, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xff, 0x8b, 0xa5, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0xc6, 0xbe, 0x8a, 0x7f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2d, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0xe4, 0xa8, 0xbe, 0xf5, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x29, 0x0a, 0x0e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0xdc, 0x86, 0xa2,
	0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2d, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0xcf, 0x84, 0xc3, 0xb4, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x65,
	0x72, 0x74, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x08, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0xb5, 0xdf, 0xf8, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2d, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18,
	0xd3, 0xac, 0xc2, 0x2d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12,
	0x24, 0x0a, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x9a,
	0x83, 0x91, 0xd0, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2d, 0x75, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0c, 0x67, 0x63, 0x70, 0x5f, 0x61, 0x75, 0x64,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0xe4, 0xd6, 0x95, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x67, 0x63, 0x70, 0x2d, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x04,
	0x6a, 0x73, 0x6f, 0x6e, 0x18, 0xe8, 0xd9, 0xc7, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6a,
	0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0xc7, 0xb9, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x12, 0x35, 0x0a, 0x14, 0x6b, 0x38, 0x73, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x9b, 0xb7, 0xdc, 0x48, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6b, 0x38, 0x73, 0x2d, 0x61, 0x75,
	0x74, 0x68, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f,
	0x0a, 0x19, 0x6b, 0x38, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0xe9, 0xa0, 0x87, 0x28,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x6b, 0x38, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1e, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0xd8, 0xac, 0xda, 0xd8,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x28, 0x0a, 0x0d, 0x6c, 0x64, 0x61, 0x70, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0xb4, 0xf8, 0x8d, 0xcb, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x64, 0x61, 0x70,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x0d, 0x6c, 0x64, 0x61,
	0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x92, 0xeb, 0xf2, 0xf7, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x64, 0x61, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0d, 0x6f, 0x63, 0x69, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0xfb, 0xd4, 0xcf, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f,
	0x63, 0x69, 0x2d, 0x61, 0x75, 0x74, 0x68, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x0e,
	0x6f, 0x63, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6f, 0x63, 0x69, 0x64, 0x18, 0xcc,
	0xef, 0xad, 0xb3, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x63, 0x69, 0x2d, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2d, 0x6f, 0x63, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x09, 0x75, 0x69, 0x64, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0xb8, 0xb5, 0xee, 0x75, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x51, 0x0a, 0x11, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x01,
	0x5a, 0x0f, 0x2e, 0x3b, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0xaa, 0x02, 0x0d, 0x41, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x72, 0x70,
	0x63, 0xca, 0x02, 0x0d, 0x41, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5c, 0x67, 0x52, 0x50,
	0x43, 0xe2, 0x02, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x00, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_models_auth_proto_rawDescOnce sync.Once
	file_models_auth_proto_rawDescData = file_models_auth_proto_rawDesc
)

func file_models_auth_proto_rawDescGZIP() []byte {
	file_models_auth_proto_rawDescOnce.Do(func() {
		file_models_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_auth_proto_rawDescData)
	})
	return file_models_auth_proto_rawDescData
}

var file_models_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_models_auth_proto_goTypes = []any{
	(*Auth)(nil), // 0: akeyless_grpc.Auth
}
var file_models_auth_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_models_auth_proto_init() }
func file_models_auth_proto_init() {
	if File_models_auth_proto != nil {
		return
	}
	file_models_special_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_models_auth_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_auth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_auth_proto_goTypes,
		DependencyIndexes: file_models_auth_proto_depIdxs,
		MessageInfos:      file_models_auth_proto_msgTypes,
	}.Build()
	File_models_auth_proto = out.File
	file_models_auth_proto_rawDesc = nil
	file_models_auth_proto_goTypes = nil
	file_models_auth_proto_depIdxs = nil
}
