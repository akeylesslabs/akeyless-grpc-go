//
//Akeyless API
//
//The purpose of this application is to provide access to Akeyless API.
//
//The version of the OpenAPI document: 2.0
//
//Contact: support@akeyless.io
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.4
// source: models/rotated_secret_details_info.proto

package akeyless_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RotatedSecretDetailsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletePreviousVersionInDays int32  `protobuf:"varint,386273900,opt,name=delete_previous_version_in_days,proto3" json:"delete_previous_version_in_days,omitempty"`
	GraceRotation               bool   `protobuf:"varint,112349147,opt,name=grace_rotation,proto3" json:"grace_rotation,omitempty"`
	GwClusterId                 int64  `protobuf:"varint,109299666,opt,name=gw_cluster_id,proto3" json:"gw_cluster_id,omitempty"`
	LastRotationError           string `protobuf:"bytes,8402225,opt,name=last_rotation_error,proto3" json:"last_rotation_error,omitempty"`
	MaxVersions                 int64  `protobuf:"varint,489956587,opt,name=max_versions,proto3" json:"max_versions,omitempty"`
	NumberOfVersionsToSave      int32  `protobuf:"varint,225418611,opt,name=number_of_versions_to_save,proto3" json:"number_of_versions_to_save,omitempty"`
	RotationHour                int32  `protobuf:"varint,254189061,opt,name=rotation_hour,proto3" json:"rotation_hour,omitempty"`
	RotationIntervalMin         bool   `protobuf:"varint,233650439,opt,name=rotation_interval_min,proto3" json:"rotation_interval_min,omitempty"`
	RotationStatement           string `protobuf:"bytes,207252977,opt,name=rotation_statement,proto3" json:"rotation_statement,omitempty"`
	RotatorCredsType            string `protobuf:"bytes,74941991,opt,name=rotator_creds_type,proto3" json:"rotator_creds_type,omitempty"`
	// RotationStatus defines types of rotation Status
	RotatorStatus   string            `protobuf:"bytes,265195327,opt,name=rotator_status,proto3" json:"rotator_status,omitempty"`
	RotatorType     string            `protobuf:"bytes,447726454,opt,name=rotator_type,proto3" json:"rotator_type,omitempty"`
	SamePassword    bool              `protobuf:"varint,57949781,opt,name=same_password,proto3" json:"same_password,omitempty"`
	ServicesDetails []*WindowsService `protobuf:"bytes,290559135,rep,name=services_details,proto3" json:"services_details,omitempty"`
}

func (x *RotatedSecretDetailsInfo) Reset() {
	*x = RotatedSecretDetailsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_rotated_secret_details_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RotatedSecretDetailsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotatedSecretDetailsInfo) ProtoMessage() {}

func (x *RotatedSecretDetailsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_models_rotated_secret_details_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotatedSecretDetailsInfo.ProtoReflect.Descriptor instead.
func (*RotatedSecretDetailsInfo) Descriptor() ([]byte, []int) {
	return file_models_rotated_secret_details_info_proto_rawDescGZIP(), []int{0}
}

func (x *RotatedSecretDetailsInfo) GetDeletePreviousVersionInDays() int32 {
	if x != nil {
		return x.DeletePreviousVersionInDays
	}
	return 0
}

func (x *RotatedSecretDetailsInfo) GetGraceRotation() bool {
	if x != nil {
		return x.GraceRotation
	}
	return false
}

func (x *RotatedSecretDetailsInfo) GetGwClusterId() int64 {
	if x != nil {
		return x.GwClusterId
	}
	return 0
}

func (x *RotatedSecretDetailsInfo) GetLastRotationError() string {
	if x != nil {
		return x.LastRotationError
	}
	return ""
}

func (x *RotatedSecretDetailsInfo) GetMaxVersions() int64 {
	if x != nil {
		return x.MaxVersions
	}
	return 0
}

func (x *RotatedSecretDetailsInfo) GetNumberOfVersionsToSave() int32 {
	if x != nil {
		return x.NumberOfVersionsToSave
	}
	return 0
}

func (x *RotatedSecretDetailsInfo) GetRotationHour() int32 {
	if x != nil {
		return x.RotationHour
	}
	return 0
}

func (x *RotatedSecretDetailsInfo) GetRotationIntervalMin() bool {
	if x != nil {
		return x.RotationIntervalMin
	}
	return false
}

func (x *RotatedSecretDetailsInfo) GetRotationStatement() string {
	if x != nil {
		return x.RotationStatement
	}
	return ""
}

func (x *RotatedSecretDetailsInfo) GetRotatorCredsType() string {
	if x != nil {
		return x.RotatorCredsType
	}
	return ""
}

func (x *RotatedSecretDetailsInfo) GetRotatorStatus() string {
	if x != nil {
		return x.RotatorStatus
	}
	return ""
}

func (x *RotatedSecretDetailsInfo) GetRotatorType() string {
	if x != nil {
		return x.RotatorType
	}
	return ""
}

func (x *RotatedSecretDetailsInfo) GetSamePassword() bool {
	if x != nil {
		return x.SamePassword
	}
	return false
}

func (x *RotatedSecretDetailsInfo) GetServicesDetails() []*WindowsService {
	if x != nil {
		return x.ServicesDetails
	}
	return nil
}

var File_models_rotated_secret_details_info_proto protoreflect.FileDescriptor

var file_models_rotated_secret_details_info_proto_rawDesc = []byte{
	0x0a, 0x28, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x6b, 0x65, 0x79,
	0x6c, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x1a, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xef, 0x05, 0x0a, 0x18, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x4c, 0x0a, 0x1f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x64,
	0x61, 0x79, 0x73, 0x18, 0xec, 0xa4, 0x98, 0xb8, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x12, 0x29,
	0x0a, 0x0e, 0x67, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0xdb, 0x9f, 0xc9, 0x35, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x67, 0x72, 0x61, 0x63, 0x65,
	0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0d, 0x67, 0x77, 0x5f,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0xd2, 0x8f, 0x8f, 0x34, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x67, 0x77, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x12, 0x33, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0xb1, 0xea, 0x80, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xeb, 0xc9, 0xd0, 0xe9, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x41, 0x0a, 0x1a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x18, 0xf3, 0xba,
	0xbe, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f,
	0x66, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x61,
	0x76, 0x65, 0x12, 0x27, 0x0a, 0x0d, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68,
	0x6f, 0x75, 0x72, 0x18, 0x85, 0xbc, 0x9a, 0x79, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x37, 0x0a, 0x15, 0x72,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x87, 0xf2, 0xb4, 0x6f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x72,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x5f, 0x6d, 0x69, 0x6e, 0x12, 0x31, 0x0a, 0x12, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0xf1, 0xdb, 0xe9, 0x62, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x12, 0x72, 0x6f, 0x74, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xa7, 0x8c,
	0xde, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x63, 0x72, 0x65, 0x64, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x0e, 0x72, 0x6f,
	0x74, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xbf, 0x9e, 0xba,
	0x7e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xf6, 0x86, 0xbf, 0xd5, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a,
	0x0d, 0x73, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0xd5,
	0xfc, 0xd0, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x4d, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x9f, 0xa9, 0xc6, 0x8a, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x51, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6b, 0x65,
	0x79, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x01, 0x5a, 0x0f, 0x2e, 0x3b,
	0x61, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0xaa, 0x02, 0x0d,
	0x41, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0xca, 0x02, 0x0d,
	0x41, 0x6b, 0x65, 0x79, 0x6c, 0x65, 0x73, 0x73, 0x5c, 0x67, 0x52, 0x50, 0x43, 0xe2, 0x02, 0x08,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x00, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_models_rotated_secret_details_info_proto_rawDescOnce sync.Once
	file_models_rotated_secret_details_info_proto_rawDescData = file_models_rotated_secret_details_info_proto_rawDesc
)

func file_models_rotated_secret_details_info_proto_rawDescGZIP() []byte {
	file_models_rotated_secret_details_info_proto_rawDescOnce.Do(func() {
		file_models_rotated_secret_details_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_rotated_secret_details_info_proto_rawDescData)
	})
	return file_models_rotated_secret_details_info_proto_rawDescData
}

var file_models_rotated_secret_details_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_models_rotated_secret_details_info_proto_goTypes = []any{
	(*RotatedSecretDetailsInfo)(nil), // 0: akeyless_grpc.RotatedSecretDetailsInfo
	(*WindowsService)(nil),           // 1: akeyless_grpc.WindowsService
}
var file_models_rotated_secret_details_info_proto_depIdxs = []int32{
	1, // 0: akeyless_grpc.RotatedSecretDetailsInfo.services_details:type_name -> akeyless_grpc.WindowsService
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_models_rotated_secret_details_info_proto_init() }
func file_models_rotated_secret_details_info_proto_init() {
	if File_models_rotated_secret_details_info_proto != nil {
		return
	}
	file_models_special_types_proto_init()
	file_models_windows_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_models_rotated_secret_details_info_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RotatedSecretDetailsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_rotated_secret_details_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_rotated_secret_details_info_proto_goTypes,
		DependencyIndexes: file_models_rotated_secret_details_info_proto_depIdxs,
		MessageInfos:      file_models_rotated_secret_details_info_proto_msgTypes,
	}.Build()
	File_models_rotated_secret_details_info_proto = out.File
	file_models_rotated_secret_details_info_proto_rawDesc = nil
	file_models_rotated_secret_details_info_proto_goTypes = nil
	file_models_rotated_secret_details_info_proto_depIdxs = nil
}
